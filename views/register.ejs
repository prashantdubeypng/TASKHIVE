<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TaskFlow - Register</title>
    <style>
        /* Background blur effect */
        .blur-background {
            filter: blur(5px);
            pointer-events: none; /* Prevent interactions */
        }

        /* OTP Modal */
        .otp-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 300px;
            z-index: 1000;
            display: none; /* Initially hidden */
        }

        /* Dark overlay */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none; /* Initially hidden */
            z-index: 999;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .registration-container {
            background: white;
            padding: 2.5rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 450px;
        }

        .logo {
            text-align: center;
            margin-bottom: 2rem;
        }

        .logo h1 {
            color: #2c3e50;
            font-size: 2.2rem;
            margin-bottom: 0.5rem;
        }

        .logo p {
            color: #7f8c8d;
            font-size: 0.9rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            color: #2c3e50;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 0.8rem;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        input:focus {
            outline: none;
            border-color: #3498db;
        }

        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.85rem;
            color: #7f8c8d;
        }

        button {
            width: 100%;
            padding: 1rem;
            background: #3498db;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #2980b9;
        }

        .login-link {
            text-align: center;
            margin-top: 1.5rem;
            color: #7f8c8d;
        }

        .login-link a {
            color: #3498db;
            text-decoration: none;
            font-weight: 500;
        }

        .login-link a:hover {
            text-decoration: underline;
        }

        @media (max-width: 480px) {
            .registration-container {
                padding: 1.5rem;
                margin: 1rem;
            }
        }
    </style>
</head>
<body>
<div class="registration-container">
    <div class="logo">
        <h1>TaskHive</h1>
        <p>Organize Your Work, Master Your Time</p>
    </div>

    <form id="registrationForm">
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" id="username" name="username" required>
        </div>

        <div class="form-group">
            <label for="email">Email Address</label>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="password"
                   pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
                   title="Must contain at least one number, one uppercase and lowercase letter, and at least 8 characters"
                   required>
            <div class="password-strength">
                Password must be at least 8 characters with uppercase, lowercase, and number
            </div>
        </div>

        <div class="form-group">
            <label for="confirm-password">Confirm Password</label>
            <input type="password" id="confirm-password" name="confirm-password" required>
        </div>

        <button type="submit">Create Account</button>
    </form>
    <!-- Dark overlay -->
    <div class="overlay" id="overlay"></div>

    <!-- OTP Form -->
    <div class="otp-modal" id="otp-modal">
        <h3>Verify Your Email</h3>
        <p>Enter the OTP sent to your email</p>
        <form id="otp-form" class="form-group">
            <input id="otp" type="text" placeholder="Enter OTP" required>
            <button type="submit">Verify</button>
        </form>
    </div>

    <div class="login-link">
        Already have an account? <a href="/user">Log In</a>
    </div>
</div>

<script>
    document.getElementById('registrationForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const name = document.getElementById('username').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirm-password').value;

        if (password !== confirmPassword) {
            alert('Passwords do not match');
            return;
        }

        try {
            const response = await fetch('/user/reg', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username: name, email: email, password: password })
            });

            const data = await response.json();

            if (data.ok) {
                alert('Successfully Registered! Redirecting...');
                document.getElementById('otp-modal').style.display = "block";
                document.getElementById('overlay').style.display = "block";
                document.getElementById('registrationForm').classList.add("blur-background");
                // window.location.href = data.redirect; // Redirecting to main page
            } else {
                alert(data.error || 'Registration failed');
            }
        } catch (e) {
            alert('Error: ' + e.message);
        }
    });
    document.addEventListener('DOMContentLoaded', () => {
    document.getElementById('otp-form').addEventListener('submit', async (e) => {
        e.preventDefault();
try{
    const email = document.getElementById('email').value;
    const otp = document.getElementById('otp').value;
    console.time('OTP Verification Function');
    const response = await fetch('/user/verify', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, otp})
    })
    const data = await response.json();
    console.log(data);
    if (data.ok) {
        alert('Otp verified!');
        window.location.href = data.redirect;
    }
    console.timeEnd('OTP Verification Function');
    if (data.error) {
        alert(data.error);
        console.log(data.error);
    }
}catch (e) {
    console.log('error in the otp verification for registration form');
    console.log(e.message);
}
    })
    })
</script>
</body>
</html>
